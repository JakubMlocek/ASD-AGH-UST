def DFS_matrix(G):
    def DFSvisit(G, u, enter_time, process_time):
        nonlocal time
        time += 1
        enter_time[u] = time
        visited[u] = True
        for each in range(len(G)):
            print( u, "  ", each )
            if visited[each] == False and G[u][each] == 1:
                parent[each] = u
                DFSvisit(G, each, enter_time, process_time)
        time += 1
        process_time[u] = time

    visited = [False] * len(G)
    parent = [None] * len(G)
    enter_time = [-1] * len(G)
    process_time = [-1] * len(G) 

    time = 0

    for each in range(len(G)):
        if not visited[each]:
            DFSvisit(G, each, enter_time, process_time)

    return parent, enter_time, process_time